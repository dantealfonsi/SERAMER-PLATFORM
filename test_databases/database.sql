-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.adjudicatarios
(
    id_adjudicatario serial NOT NULL,
    tipo_documento character varying(20) COLLATE pg_catalog."default" NOT NULL,
    numero_documento character varying(30) COLLATE pg_catalog."default" NOT NULL,
    razon_social_nombre character varying(200) COLLATE pg_catalog."default" NOT NULL,
    apellido character varying(100) COLLATE pg_catalog."default",
    telefono character varying(50) COLLATE pg_catalog."default",
    correo_electronico character varying(100) COLLATE pg_catalog."default",
    direccion_fiscal text COLLATE pg_catalog."default",
    solvencia_financiera boolean DEFAULT true,
    es_persona_juridica boolean NOT NULL,
    nombre_representante_legal character varying(150) COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    estado_activo boolean DEFAULT true,
    CONSTRAINT adjudicatarios_pkey PRIMARY KEY (id_adjudicatario),
    CONSTRAINT adjudicatarios_numero_documento_key UNIQUE (numero_documento)
);

CREATE TABLE IF NOT EXISTS public.alertas_cumplimiento
(
    id_alerta serial NOT NULL,
    id_tipo_alerta integer NOT NULL,
    id_adjudicatario integer NOT NULL,
    id_puesto integer,
    fecha_generacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    descripcion_alerta text COLLATE pg_catalog."default" NOT NULL,
    estado_alerta character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Activa'::character varying,
    fecha_resolucion_escalada timestamp without time zone,
    id_infraccion_escalada integer,
    generada_por integer NOT NULL,
    CONSTRAINT alertas_cumplimiento_pkey PRIMARY KEY (id_alerta)
);

CREATE TABLE IF NOT EXISTS public.cat_mercados
(
    id_mercado serial NOT NULL,
    nombre_mercado character varying(100) COLLATE pg_catalog."default" NOT NULL,
    direccion text COLLATE pg_catalog."default",
    activo boolean DEFAULT true,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT cat_mercados_pkey PRIMARY KEY (id_mercado),
    CONSTRAINT cat_mercados_nombre_mercado_key UNIQUE (nombre_mercado)
);

CREATE TABLE IF NOT EXISTS public.cat_rubros_comerciales
(
    id_rubro serial NOT NULL,
    nombre_rubro character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    activo boolean DEFAULT true,
    CONSTRAINT cat_rubros_comerciales_pkey PRIMARY KEY (id_rubro),
    CONSTRAINT cat_rubros_comerciales_nombre_rubro_key UNIQUE (nombre_rubro)
);

CREATE TABLE IF NOT EXISTS public.cat_tipos_alerta
(
    id_tipo_alerta serial NOT NULL,
    nombre_tipo_alerta character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    escalamiento_automatico boolean DEFAULT false,
    dias_para_escalar integer,
    CONSTRAINT cat_tipos_alerta_pkey PRIMARY KEY (id_tipo_alerta),
    CONSTRAINT cat_tipos_alerta_nombre_tipo_alerta_key UNIQUE (nombre_tipo_alerta)
);

CREATE TABLE IF NOT EXISTS public.cat_tipos_infraccion
(
    id_tipo_infraccion serial NOT NULL,
    nombre_tipo_infraccion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    base_multa numeric(10, 2),
    CONSTRAINT cat_tipos_infraccion_pkey PRIMARY KEY (id_tipo_infraccion),
    CONSTRAINT cat_tipos_infraccion_nombre_tipo_infraccion_key UNIQUE (nombre_tipo_infraccion)
);

CREATE TABLE IF NOT EXISTS public.cat_tipos_sancion
(
    id_tipo_sancion serial NOT NULL,
    nombre_tipo_sancion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    CONSTRAINT cat_tipos_sancion_pkey PRIMARY KEY (id_tipo_sancion),
    CONSTRAINT cat_tipos_sancion_nombre_tipo_sancion_key UNIQUE (nombre_tipo_sancion)
);

CREATE TABLE IF NOT EXISTS public.contratos
(
    id_contrato serial NOT NULL,
    id_adjudicatario integer NOT NULL,
    id_puesto integer NOT NULL,
    numero_contrato character varying(50) COLLATE pg_catalog."default" NOT NULL,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    monto_tarifa_mensual numeric(10, 2) NOT NULL,
    moneda_tarifa character varying(10) COLLATE pg_catalog."default" NOT NULL DEFAULT 'USD'::character varying,
    estado_contrato character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Activo'::character varying,
    fecha_rescision date,
    motivo_rescision text COLLATE pg_catalog."default",
    CONSTRAINT contratos_pkey PRIMARY KEY (id_contrato),
    CONSTRAINT contratos_id_puesto_key UNIQUE (id_puesto),
    CONSTRAINT contratos_numero_contrato_key UNIQUE (numero_contrato)
);

CREATE TABLE IF NOT EXISTS public.documentos_adjuntos
(
    id_documento_adjunto serial NOT NULL,
    nombre_archivo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tipo_archivo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    url_almacenamiento text COLLATE pg_catalog."default" NOT NULL,
    fecha_subida timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    subido_por_usuario integer NOT NULL,
    id_entidad_asociada integer,
    nombre_tabla_asociada character varying(50) COLLATE pg_catalog."default",
    descripcion text COLLATE pg_catalog."default",
    CONSTRAINT documentos_adjuntos_pkey PRIMARY KEY (id_documento_adjunto)
);

CREATE TABLE IF NOT EXISTS public.expedientes_administrativos
(
    id_expediente serial NOT NULL,
    id_infraccion integer NOT NULL,
    fecha_apertura timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    estado_expediente character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Abierto'::character varying,
    fecha_cierre timestamp without time zone,
    decision_final text COLLATE pg_catalog."default",
    autoridad_decisor character varying(150) COLLATE pg_catalog."default",
    fecha_notificacion_decision timestamp without time zone,
    CONSTRAINT expedientes_administrativos_pkey PRIMARY KEY (id_expediente),
    CONSTRAINT expedientes_administrativos_id_infraccion_key UNIQUE (id_infraccion)
);

CREATE TABLE IF NOT EXISTS public.infracciones
(
    id_infraccion serial NOT NULL,
    id_adjudicatario integer NOT NULL,
    id_puesto integer,
    fecha_hora_infraccion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_tipo_infraccion integer NOT NULL,
    articulo_violado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion_infraccion text COLLATE pg_catalog."default" NOT NULL,
    evidencia_url text COLLATE pg_catalog."default",
    estado_infraccion character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Reportada'::character varying,
    observaciones_fiscal text COLLATE pg_catalog."default",
    registrada_por_usuario integer NOT NULL,
    CONSTRAINT infracciones_pkey PRIMARY KEY (id_infraccion)
);

CREATE TABLE IF NOT EXISTS public.inspecciones_programadas
(
    id_inspeccion_prog serial NOT NULL,
    fecha_programada date NOT NULL,
    tipo_inspeccion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    responsable_asignado integer NOT NULL,
    estado_inspeccion character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Pendiente'::character varying,
    observaciones text COLLATE pg_catalog."default",
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT inspecciones_programadas_pkey PRIMARY KEY (id_inspeccion_prog)
);

CREATE TABLE IF NOT EXISTS public.notificaciones
(
    id_notificacion serial NOT NULL,
    fecha_hora_notificacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_usuario_emisor integer,
    id_usuario_receptor integer NOT NULL,
    tipo_notificacion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    asunto_notificacion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    mensaje_notificacion text COLLATE pg_catalog."default" NOT NULL,
    leida boolean DEFAULT false,
    id_queja integer,
    id_alerta integer,
    id_infraccion integer,
    CONSTRAINT notificaciones_pkey PRIMARY KEY (id_notificacion)
);

CREATE TABLE IF NOT EXISTS public.pagos_multas
(
    id_pago_multa serial NOT NULL,
    id_sancion integer NOT NULL,
    fecha_pago timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    monto_pagado numeric(10, 2) NOT NULL,
    referencia_transaccion character varying(100) COLLATE pg_catalog."default",
    estado_pago_multa character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Pagado'::character varying,
    CONSTRAINT pagos_multas_pkey PRIMARY KEY (id_pago_multa)
);

CREATE TABLE IF NOT EXISTS public.pagos_tarifas
(
    id_pago_tarifa serial NOT NULL,
    id_contrato integer NOT NULL,
    mes_periodo date NOT NULL,
    fecha_pago timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    monto_pagado numeric(10, 2) NOT NULL,
    tipo_pago character varying(50) COLLATE pg_catalog."default" NOT NULL,
    estado_pago character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Pagado'::character varying,
    referencia_transaccion character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT pagos_tarifas_pkey PRIMARY KEY (id_pago_tarifa)
);

CREATE TABLE IF NOT EXISTS public.permisos
(
    id_permiso serial NOT NULL,
    nombre_permiso character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    CONSTRAINT permisos_pkey PRIMARY KEY (id_permiso),
    CONSTRAINT permisos_nombre_permiso_key UNIQUE (nombre_permiso)
);

CREATE TABLE IF NOT EXISTS public.puestos_locales
(
    id_puesto serial NOT NULL,
    id_mercado integer NOT NULL,
    tipo_puesto character varying(50) COLLATE pg_catalog."default" NOT NULL,
    codigo_puesto character varying(20) COLLATE pg_catalog."default" NOT NULL,
    ubicacion_detalle character varying(150) COLLATE pg_catalog."default",
    dimensiones character varying(50) COLLATE pg_catalog."default",
    id_rubro_autorizado integer NOT NULL,
    tiene_servicios_propios boolean DEFAULT false,
    estado_disponibilidad character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Libre'::character varying,
    CONSTRAINT puestos_locales_pkey PRIMARY KEY (id_puesto),
    CONSTRAINT puestos_locales_codigo_puesto_key UNIQUE (codigo_puesto)
);

CREATE TABLE IF NOT EXISTS public.quejas
(
    id_queja serial NOT NULL,
    fecha_hora_queja timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_usuario_cliente integer,
    nombre_cliente character varying(150) COLLATE pg_catalog."default",
    telefono_cliente character varying(50) COLLATE pg_catalog."default",
    correo_electronico_cliente character varying(100) COLLATE pg_catalog."default",
    descripcion_queja text COLLATE pg_catalog."default" NOT NULL,
    id_puesto integer,
    id_adjudicatario integer,
    tipo_queja character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estado_queja character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Recibida'::character varying,
    prioridad_queja character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Media'::character varying,
    observaciones_internas text COLLATE pg_catalog."default",
    CONSTRAINT quejas_pkey PRIMARY KEY (id_queja)
);

CREATE TABLE IF NOT EXISTS public.recursos_administrativos
(
    id_recurso serial NOT NULL,
    id_expediente integer NOT NULL,
    tipo_recurso character varying(100) COLLATE pg_catalog."default" NOT NULL,
    fecha_presentacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    argumentos text COLLATE pg_catalog."default" NOT NULL,
    estado_recurso character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'En Revisión'::character varying,
    fecha_resolucion timestamp without time zone,
    resolucion_detalle text COLLATE pg_catalog."default",
    autoridad_resolucion character varying(150) COLLATE pg_catalog."default",
    CONSTRAINT recursos_administrativos_pkey PRIMARY KEY (id_recurso)
);

CREATE TABLE IF NOT EXISTS public.rol_permiso
(
    id_rol integer NOT NULL,
    id_permiso integer NOT NULL,
    CONSTRAINT rol_permiso_pkey PRIMARY KEY (id_rol, id_permiso)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id_rol serial NOT NULL,
    nombre_rol character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion_rol text COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id_rol),
    CONSTRAINT roles_nombre_rol_key UNIQUE (nombre_rol)
);

CREATE TABLE IF NOT EXISTS public.sanciones
(
    id_sancion serial NOT NULL,
    id_infraccion integer NOT NULL,
    id_tipo_sancion integer NOT NULL,
    monto_multa numeric(10, 2),
    moneda_multa character varying(10) COLLATE pg_catalog."default",
    fecha_imposicion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_inicio_efecto date,
    fecha_fin_efecto date,
    estado_sancion character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Impuesta'::character varying,
    observaciones_sancion text COLLATE pg_catalog."default",
    es_reincidencia boolean DEFAULT false,
    impuesta_por_usuario integer NOT NULL,
    CONSTRAINT sanciones_pkey PRIMARY KEY (id_sancion),
    CONSTRAINT sanciones_id_infraccion_key UNIQUE (id_infraccion)
);

CREATE TABLE IF NOT EXISTS public.seguimiento_alertas
(
    id_seguimiento serial NOT NULL,
    id_alerta integer NOT NULL,
    fecha_accion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    tipo_accion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion_accion text COLLATE pg_catalog."default",
    realizado_por integer NOT NULL,
    resultado_accion text COLLATE pg_catalog."default",
    CONSTRAINT seguimiento_alertas_pkey PRIMARY KEY (id_seguimiento)
);

CREATE TABLE IF NOT EXISTS public.seguimiento_quejas
(
    id_seguimiento_queja serial NOT NULL,
    id_queja integer NOT NULL,
    fecha_hora_accion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_usuario_administrador integer NOT NULL,
    tipo_accion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion_accion text COLLATE pg_catalog."default",
    resultado_accion text COLLATE pg_catalog."default",
    CONSTRAINT seguimiento_quejas_pkey PRIMARY KEY (id_seguimiento_queja)
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id_usuario serial NOT NULL,
    nombre_usuario character varying(50) COLLATE pg_catalog."default" NOT NULL,
    contrasena_hash character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nombre_completo character varying(150) COLLATE pg_catalog."default" NOT NULL,
    correo_electronico character varying(100) COLLATE pg_catalog."default",
    id_rol integer NOT NULL,
    estado_activo boolean DEFAULT true,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT usuarios_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT usuarios_correo_electronico_key UNIQUE (correo_electronico),
    CONSTRAINT usuarios_nombre_usuario_key UNIQUE (nombre_usuario)
);

ALTER TABLE IF EXISTS public.alertas_cumplimiento
    ADD CONSTRAINT alertas_cumplimiento_generada_por_fkey FOREIGN KEY (generada_por)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.alertas_cumplimiento
    ADD CONSTRAINT alertas_cumplimiento_id_adjudicatario_fkey FOREIGN KEY (id_adjudicatario)
    REFERENCES public.adjudicatarios (id_adjudicatario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.alertas_cumplimiento
    ADD CONSTRAINT alertas_cumplimiento_id_infraccion_escalada_fkey FOREIGN KEY (id_infraccion_escalada)
    REFERENCES public.infracciones (id_infraccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.alertas_cumplimiento
    ADD CONSTRAINT alertas_cumplimiento_id_puesto_fkey FOREIGN KEY (id_puesto)
    REFERENCES public.puestos_locales (id_puesto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.alertas_cumplimiento
    ADD CONSTRAINT alertas_cumplimiento_id_tipo_alerta_fkey FOREIGN KEY (id_tipo_alerta)
    REFERENCES public.cat_tipos_alerta (id_tipo_alerta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratos
    ADD CONSTRAINT contratos_id_adjudicatario_fkey FOREIGN KEY (id_adjudicatario)
    REFERENCES public.adjudicatarios (id_adjudicatario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratos
    ADD CONSTRAINT contratos_id_puesto_fkey FOREIGN KEY (id_puesto)
    REFERENCES public.puestos_locales (id_puesto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS contratos_id_puesto_key
    ON public.contratos(id_puesto);


ALTER TABLE IF EXISTS public.documentos_adjuntos
    ADD CONSTRAINT documentos_adjuntos_subido_por_usuario_fkey FOREIGN KEY (subido_por_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.expedientes_administrativos
    ADD CONSTRAINT expedientes_administrativos_id_infraccion_fkey FOREIGN KEY (id_infraccion)
    REFERENCES public.infracciones (id_infraccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS expedientes_administrativos_id_infraccion_key
    ON public.expedientes_administrativos(id_infraccion);


ALTER TABLE IF EXISTS public.infracciones
    ADD CONSTRAINT infracciones_id_adjudicatario_fkey FOREIGN KEY (id_adjudicatario)
    REFERENCES public.adjudicatarios (id_adjudicatario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.infracciones
    ADD CONSTRAINT infracciones_id_puesto_fkey FOREIGN KEY (id_puesto)
    REFERENCES public.puestos_locales (id_puesto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.infracciones
    ADD CONSTRAINT infracciones_id_tipo_infraccion_fkey FOREIGN KEY (id_tipo_infraccion)
    REFERENCES public.cat_tipos_infraccion (id_tipo_infraccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.infracciones
    ADD CONSTRAINT infracciones_registrada_por_usuario_fkey FOREIGN KEY (registrada_por_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inspecciones_programadas
    ADD CONSTRAINT inspecciones_programadas_responsable_asignado_fkey FOREIGN KEY (responsable_asignado)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificaciones
    ADD CONSTRAINT notificaciones_id_alerta_fkey FOREIGN KEY (id_alerta)
    REFERENCES public.alertas_cumplimiento (id_alerta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificaciones
    ADD CONSTRAINT notificaciones_id_infraccion_fkey FOREIGN KEY (id_infraccion)
    REFERENCES public.infracciones (id_infraccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificaciones
    ADD CONSTRAINT notificaciones_id_queja_fkey FOREIGN KEY (id_queja)
    REFERENCES public.quejas (id_queja) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificaciones
    ADD CONSTRAINT notificaciones_id_usuario_emisor_fkey FOREIGN KEY (id_usuario_emisor)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificaciones
    ADD CONSTRAINT notificaciones_id_usuario_receptor_fkey FOREIGN KEY (id_usuario_receptor)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos_multas
    ADD CONSTRAINT pagos_multas_id_sancion_fkey FOREIGN KEY (id_sancion)
    REFERENCES public.sanciones (id_sancion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos_tarifas
    ADD CONSTRAINT pagos_tarifas_id_contrato_fkey FOREIGN KEY (id_contrato)
    REFERENCES public.contratos (id_contrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.puestos_locales
    ADD CONSTRAINT puestos_locales_id_mercado_fkey FOREIGN KEY (id_mercado)
    REFERENCES public.cat_mercados (id_mercado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.puestos_locales
    ADD CONSTRAINT puestos_locales_id_rubro_autorizado_fkey FOREIGN KEY (id_rubro_autorizado)
    REFERENCES public.cat_rubros_comerciales (id_rubro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.quejas
    ADD CONSTRAINT quejas_id_adjudicatario_fkey FOREIGN KEY (id_adjudicatario)
    REFERENCES public.adjudicatarios (id_adjudicatario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.quejas
    ADD CONSTRAINT quejas_id_puesto_fkey FOREIGN KEY (id_puesto)
    REFERENCES public.puestos_locales (id_puesto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.quejas
    ADD CONSTRAINT quejas_id_usuario_cliente_fkey FOREIGN KEY (id_usuario_cliente)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recursos_administrativos
    ADD CONSTRAINT recursos_administrativos_id_expediente_fkey FOREIGN KEY (id_expediente)
    REFERENCES public.expedientes_administrativos (id_expediente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rol_permiso
    ADD CONSTRAINT rol_permiso_id_permiso_fkey FOREIGN KEY (id_permiso)
    REFERENCES public.permisos (id_permiso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rol_permiso
    ADD CONSTRAINT rol_permiso_id_rol_fkey FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sanciones
    ADD CONSTRAINT sanciones_id_infraccion_fkey FOREIGN KEY (id_infraccion)
    REFERENCES public.infracciones (id_infraccion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS sanciones_id_infraccion_key
    ON public.sanciones(id_infraccion);


ALTER TABLE IF EXISTS public.sanciones
    ADD CONSTRAINT sanciones_id_tipo_sancion_fkey FOREIGN KEY (id_tipo_sancion)
    REFERENCES public.cat_tipos_sancion (id_tipo_sancion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sanciones
    ADD CONSTRAINT sanciones_impuesta_por_usuario_fkey FOREIGN KEY (impuesta_por_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.seguimiento_alertas
    ADD CONSTRAINT seguimiento_alertas_id_alerta_fkey FOREIGN KEY (id_alerta)
    REFERENCES public.alertas_cumplimiento (id_alerta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.seguimiento_alertas
    ADD CONSTRAINT seguimiento_alertas_realizado_por_fkey FOREIGN KEY (realizado_por)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.seguimiento_quejas
    ADD CONSTRAINT seguimiento_quejas_id_queja_fkey FOREIGN KEY (id_queja)
    REFERENCES public.quejas (id_queja) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.seguimiento_quejas
    ADD CONSTRAINT seguimiento_quejas_id_usuario_administrador_fkey FOREIGN KEY (id_usuario_administrador)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_rol_fkey FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;